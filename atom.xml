<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>鲲之领域</title>
  <subtitle>Welcome To My Sea.</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-10-09T02:54:37.554Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>夕夏</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>qsort函数</title>
    <link href="http://yoursite.com/2016/10/08/2016-10-8-qsort%E5%87%BD%E6%95%B0/"/>
    <id>http://yoursite.com/2016/10/08/2016-10-8-qsort函数/</id>
    <published>2016-10-08T14:18:22.000Z</published>
    <updated>2016-10-09T02:54:37.554Z</updated>
    
    <content type="html"><![CDATA[<p>qsort包含在<stdlib.h>头文件中，此函数根据你给的比较条件进行快速排序，通过指针移动实现排序。排序之后的结果仍然放在原数组中。使用qsort函数必须自己写一个比较函数。</stdlib.h></p>
<p>函数原型：<br><figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">void qsort(void *base, size_t num, size_t width, int (__cdecl*compare)(const void*,const void*));</div></pre></td></tr></table></figure></p>
<p>用法以及参数说明：</p>
<p>Sorts the num elements of the array pointed by base, each element size bytes long, using the comparator function to determine the order.</p>
<p>The sorting algorithm used by this function compares pairs of values by calling the specified comparator function with two pointers to elements of the array.</p>
<p>The function does not return any value, but modifies the content of the array pointed by base reordering its elements to the newly sorted order.</p>
<p>base Pointer to the first element of the array to be sorted.(数组起始地址)<br>num Number of elements in the array pointed by base.(数组元素个数)<br>size Size in bytes of each element in the array.(每一个元素的大小)<br>comparator Function that compares two elements.(函数指针，指向比较函数)<br>1、The function must accept two parameters that are pointers to elements, type-casted as void*. These parameters should be cast back to some data type and be compared.<br>2、The return value of this function should represent whether elem1 is considered less than, equal to, or greater than elem2 by returning, respectively, a negative value, zero or a positive value.<br>Return Value none (无返回值)</p>
<a id="more"></a>
<h3 id="一、对int类型数组排序"><a href="#一、对int类型数组排序" class="headerlink" title="一、对int类型数组排序"></a>一、对int类型数组排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> num[<span class="number">100</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> *(<span class="keyword">int</span> *)a - *(<span class="keyword">int</span> *)b;</div><div class="line">&#125;</div><div class="line">qsort(num, <span class="number">100</span>, <span class="keyword">sizeof</span>(num[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>
<h3 id="二、对char类型数组排序（同int类型）"><a href="#二、对char类型数组排序（同int类型）" class="headerlink" title="二、对char类型数组排序（同int类型）"></a>二、对char类型数组排序（同int类型）</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">char</span> word[<span class="number">100</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> *(<span class="keyword">char</span> *)a - *(<span class="keyword">char</span> *)b;</div><div class="line">&#125;</div><div class="line">qsort(word, <span class="number">100</span>, <span class="keyword">sizeof</span>(word[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>
<h3 id="三、对double类型数组排序"><a href="#三、对double类型数组排序" class="headerlink" title="三、对double类型数组排序"></a>三、对double类型数组排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">double</span> in[<span class="number">100</span>];</div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> *(<span class="keyword">double</span> *)a &gt; *(<span class="keyword">double</span> *)b ? <span class="number">1</span> : <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line">qsort(in, <span class="number">100</span>, <span class="keyword">sizeof</span>(in[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>
<h3 id="四、对结构体一级排序"><a href="#四、对结构体一级排序" class="headerlink" title="四、对结构体一级排序"></a>四、对结构体一级排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Sample&#123;</div><div class="line">	<span class="keyword">double</span> data;</div><div class="line">	<span class="keyword">int</span> other;</div><div class="line">&#125;s[<span class="number">100</span>]</div><div class="line"><span class="comment">//按照data的值从小到大将结构体排序</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</div><div class="line">	<span class="keyword">struct</span> Sample *c = (<span class="keyword">struct</span> Sample *)a;</div><div class="line">	<span class="keyword">struct</span> Sample *d = (<span class="keyword">struct</span> Sample *)b; </div><div class="line">	<span class="keyword">return</span> c-&gt;data  &gt;  d-&gt;data ? <span class="number">1</span> : <span class="number">-1</span>;</div><div class="line">&#125;</div><div class="line">qsort(s, <span class="number">100</span>, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>
<h3 id="五、对结构体二级排序"><a href="#五、对结构体二级排序" class="headerlink" title="五、对结构体二级排序"></a>五、对结构体二级排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Sample&#123;</div><div class="line">	<span class="keyword">int</span> x;</div><div class="line">	<span class="keyword">int</span> y;</div><div class="line">&#125;s[<span class="number">100</span>];</div><div class="line"><span class="comment">//按照x从小到大排序，当x相等时按照y从大到小排序</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span><span class="params">( <span class="keyword">const</span> <span class="keyword">void</span> *a , <span class="keyword">const</span> <span class="keyword">void</span> *b )</span></span>&#123;</div><div class="line">	<span class="keyword">struct</span> Sample *c = (<span class="keyword">struct</span> Sample *)a;</div><div class="line">	<span class="keyword">struct</span> Sample *d = (<span class="keyword">struct</span> Sample *)b;</div><div class="line">	<span class="keyword">if</span>(c-&gt;x != d-&gt;x)&#123;</div><div class="line">		<span class="keyword">return</span> c-&gt;x - d-&gt;x;</div><div class="line">	&#125;</div><div class="line">	<span class="keyword">else</span>&#123;</div><div class="line">		<span class="keyword">return</span> d-&gt;y - c-&gt;y;</div><div class="line">	&#125;</div><div class="line">&#125;</div><div class="line">qsort(s, <span class="number">100</span>, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>
<h3 id="六、对字符串进行排序"><a href="#六、对字符串进行排序" class="headerlink" title="六、对字符串进行排序"></a>六、对字符串进行排序</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">struct</span> Sample&#123;</div><div class="line">	<span class="keyword">int</span> data;</div><div class="line">	<span class="keyword">char</span> str[<span class="number">100</span>];</div><div class="line">&#125;s[<span class="number">100</span>];</div><div class="line"><span class="comment">//按照结构体中字符串str的字典顺序排序</span></div><div class="line"><span class="function"><span class="keyword">int</span> <span class="title">cmp</span> <span class="params">(<span class="keyword">const</span> <span class="keyword">void</span> *a, <span class="keyword">const</span> <span class="keyword">void</span> *b)</span></span>&#123;</div><div class="line">	<span class="keyword">return</span> <span class="built_in">strcmp</span>((*(Sample *)a)-&gt;str, (*(Sample *)b)-&gt;str);</div><div class="line">&#125;</div><div class="line">qsort(s, <span class="number">100</span>, <span class="keyword">sizeof</span>(s[<span class="number">0</span>]), cmp);</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;qsort包含在&lt;stdlib.h&gt;头文件中，此函数根据你给的比较条件进行快速排序，通过指针移动实现排序。排序之后的结果仍然放在原数组中。使用qsort函数必须自己写一个比较函数。&lt;/p&gt;
&lt;p&gt;函数原型：&lt;br&gt;&lt;figure class=&quot;highlight&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;void qsort(void *base, size_t num, size_t width, int (__cdecl*compare)(const void*,const void*));&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;用法以及参数说明：&lt;/p&gt;
&lt;p&gt;Sorts the num elements of the array pointed by base, each element size bytes long, using the comparator function to determine the order.&lt;/p&gt;
&lt;p&gt;The sorting algorithm used by this function compares pairs of values by calling the specified comparator function with two pointers to elements of the array.&lt;/p&gt;
&lt;p&gt;The function does not return any value, but modifies the content of the array pointed by base reordering its elements to the newly sorted order.&lt;/p&gt;
&lt;p&gt;base Pointer to the first element of the array to be sorted.(数组起始地址)&lt;br&gt;num Number of elements in the array pointed by base.(数组元素个数)&lt;br&gt;size Size in bytes of each element in the array.(每一个元素的大小)&lt;br&gt;comparator Function that compares two elements.(函数指针，指向比较函数)&lt;br&gt;1、The function must accept two parameters that are pointers to elements, type-casted as void*. These parameters should be cast back to some data type and be compared.&lt;br&gt;2、The return value of this function should represent whether elem1 is considered less than, equal to, or greater than elem2 by returning, respectively, a negative value, zero or a positive value.&lt;br&gt;Return Value none (无返回值)&lt;/p&gt;
    
    </summary>
    
    
      <category term="coding" scheme="http://yoursite.com/tags/coding/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="http://yoursite.com/2016/09/11/Hello%20Woeld/"/>
    <id>http://yoursite.com/2016/09/11/Hello Woeld/</id>
    <published>2016-09-11T08:09:49.000Z</published>
    <updated>2016-09-11T14:01:15.053Z</updated>
    
    <content type="html"><![CDATA[<p><em>Hello World!</em><br>借助<code>github page + hexo</code>的经典搭配，我梦想中的blog终于面世啦！<br><del>（以后叫我站长大人可好）</del><br>这个博客主要的用处在于po一些成系统的经验知识以及自己开发的项目<br>如果可能的话，当然希望它能够更酷一些~<br>要维护它还要学很多很多很多的东西TAT,前端果然是个大坑<del>(其实啥都是坑)</del><br><strong>总之加油吧！</strong>  </p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;em&gt;Hello World!&lt;/em&gt;&lt;br&gt;借助&lt;code&gt;github page + hexo&lt;/code&gt;的经典搭配，我梦想中的blog终于面世啦！&lt;br&gt;&lt;del&gt;（以后叫我站长大人可好）&lt;/del&gt;&lt;br&gt;这个博客主要的用处在于po一些成系统的经验知识以及自己
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
  <entry>
    <title>主题介绍文章</title>
    <link href="http://yoursite.com/2016/09/10/%E4%B8%BB%E9%A2%98%E4%BB%8B%E7%BB%8D%E6%96%87%E7%AB%A0/"/>
    <id>http://yoursite.com/2016/09/10/主题介绍文章/</id>
    <published>2016-09-09T16:00:00.000Z</published>
    <updated>2016-09-11T15:07:42.903Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="external">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="external">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="external">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="external">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo new <span class="string">"My New Post"</span></div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="external">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo server</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="external">Server</a></p>
<a id="more"></a>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo generate</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="external">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">$ hexo deploy</div></pre></td></tr></table></figure>
<p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="external">Deployment</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;
&lt;h2 id=&quot;Quick-Start&quot;&gt;&lt;a href=&quot;#Quick-Start&quot; class=&quot;headerlink&quot; title=&quot;Quick Start&quot;&gt;&lt;/a&gt;Quick Start&lt;/h2&gt;&lt;h3 id=&quot;Create-a-new-post&quot;&gt;&lt;a href=&quot;#Create-a-new-post&quot; class=&quot;headerlink&quot; title=&quot;Create a new post&quot;&gt;&lt;/a&gt;Create a new post&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo new &lt;span class=&quot;string&quot;&gt;&quot;My New Post&quot;&lt;/span&gt;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/writing.html&quot;&gt;Writing&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;Run-server&quot;&gt;&lt;a href=&quot;#Run-server&quot; class=&quot;headerlink&quot; title=&quot;Run server&quot;&gt;&lt;/a&gt;Run server&lt;/h3&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;$ hexo server&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;More info: &lt;a href=&quot;https://hexo.io/docs/server.html&quot;&gt;Server&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
    
  </entry>
  
</feed>
